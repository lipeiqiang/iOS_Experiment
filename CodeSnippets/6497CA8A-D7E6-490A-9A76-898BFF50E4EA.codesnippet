<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>zldbglabel</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>ClassImplementation</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>//    [self refleshDebugInfo:nil];
}

// デバッグ用ラベル
- (void)refleshDebugInfo:(NSTimer *)timer {
    const NSTimeInterval refleshInterval = 0.25f;
    
    UIView *baseView = self.view;
    UILabel *debugInfoLabel = [timer userInfo];
    
    if (![debugInfoLabel superview]) {
        debugInfoLabel = [[UILabel alloc] init];
        debugInfoLabel.backgroundColor = [UIColor colorWithWhite:0 alpha:0.5];
        debugInfoLabel.textColor = [UIColor whiteColor];
        debugInfoLabel.numberOfLines = 0;
        [baseView addSubview:debugInfoLabel];
    }
    
    if (!timer) {
        NSTimer *debugTimer = [NSTimer scheduledTimerWithTimeInterval:refleshInterval
                                                               target:self
                                                             selector:@selector(refleshDebugInfo:)
                                                             userInfo:debugInfoLabel
                                                              repeats:YES];
        [[NSRunLoop mainRunLoop] addTimer:debugTimer forMode:NSRunLoopCommonModes];
    }
    
    NSMutableString *debugInfoText = [NSMutableString stringWithString:@""];
    
    float (^getFreeMem)(void) = ^{
        struct vm_statistics a_vm_info;
        mach_msg_type_number_t a_count = HOST_VM_INFO_COUNT;
        host_statistics( mach_host_self(), HOST_VM_INFO, (host_info_t)&amp;a_vm_info ,&amp;a_count);
        float size = ((a_vm_info.free_count * vm_page_size)/1024.0)/1024.0;
        return size;
    };
    float freeMem = getFreeMem();
    NSString *freeMemtext = [NSString stringWithFormat:@"Free Memory:%0.1fMB\n", freeMem];
    [debugInfoText appendString:freeMemtext];
    
    NSInteger thumbCount = 0;
    for (UIView *view in self.tableView.subviews) {
        if ([view isKindOfClass:[BLBookShelfThumbnailImage class]]) {
            thumbCount++;
        }
    }
    NSString *thumbCountText = [NSString stringWithFormat:@"ThumbnailImages:%d\n", thumbCount];
    [debugInfoText appendString:thumbCountText];
    
    NSString *thumbCacheText = [NSString stringWithFormat:@"ThumbImageCacheCount:%d\n", thumbnailCache.count];
    [debugInfoText appendString:thumbCacheText];
    
    NSString *frameText = [NSString stringWithFormat:@"frame:%@\n", NSStringFromCGRect(self.tableView.frame)];
    [debugInfoText appendString:frameText];
    NSString *contentSizeText = [NSString stringWithFormat:@"contentSize:%@\n", NSStringFromCGSize(self.tableView.contentSize)];
    [debugInfoText appendString:contentSizeText];
    NSString *offsetText = [NSString stringWithFormat:@"offset:%@\n", NSStringFromCGPoint(self.tableView.contentOffset)];
    [debugInfoText appendString:offsetText];
    NSString *contentInsetText = [NSString stringWithFormat:@"inset:%@\n", NSStringFromUIEdgeInsets(self.tableView.contentInset)];
    [debugInfoText appendString:contentInsetText];
    
    debugInfoLabel.text = debugInfoText;
    
    CGRect labelFrame = CGRectMake(0, baseView.bounds.size.height - 220, baseView.bounds.size.width, 180);
    debugInfoLabel.frame = labelFrame;
    [baseView bringSubviewToFront:debugInfoLabel];
    
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>6497CA8A-D7E6-490A-9A76-898BFF50E4EA</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetTitle</key>
	<string>ZL Debug Label (Auto Reflesh)</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
